name: docker

on:
  push:
    branches: [ 'main' ]
    tags: [ 'v*.*.*' ]

  pull_request:
    branches: [ 'main' ]
  
jobs:
  build:
    name: Build the dotnet project
    runs-on: ubuntu-latest
    # setting default pwd for run jobs
    # refs: https://stackoverflow.com/questions/58139175/running-actions-in-another-directory
    defaults:
      run:
        working-directory: ./api

    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 6.0.x
      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore

      - name: Test
        run: dotnet test --no-build --verbosity normal

  deploy:
    needs: "build"
    name: Deploy to Dockerhub
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repo
        uses: actions/checkout@v3

      - name: Extract metadata (tags, labels) for docker
        id: meta
        uses: docker/metadata-action@v4
        with: 
          images: 13angs/task-scheduler
          
      # - name: Debug Output
      #   run: |
      #     echo "github.event: ${{ toJson(github.event) }}"

      - name: Set Image Tag
        id: set-image-tag
        run: |
          echo "ref: ${{ github.event.ref }}"
          headRefs="refs/heads"
          tagRefs="refs/tags"
          if [[ "${{ github.event.ref }}" == *"$headRefs"* ]]; then
            echo "ref: ${headRefs}"
            echo "IMAGE_TAG=latest" >> $GITHUB_ENV
          elif [[ "${{ github.event.ref }}" == *"$tagRefs"* ]]; then
            echo "ref: ${tagRefs}"
            TAG_REF="${{ github.event.ref }}"
            TAG_NAME="${TAG_REF##*/}"
            echo "IMAGE_TAG=${TAG_NAME}" >> $GITHUB_ENV
          else
            echo "ref: else"
            echo "IMAGE_TAG=latest" >> $GITHUB_ENV
          fi

      - name: Login to Dockerhub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push to Dockerhub
        uses: docker/build-push-action@v3
        with:
          context: ./api
          push: ${{ github.event_name != 'pull_request' }}
          tags: 13angs/task-scheduler:${{ env.IMAGE_TAG }}
          labels: ${{ steps.meta.outputs.labels }}